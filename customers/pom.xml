<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<parent>
		<groupId>dev.jbazann.skwidl</groupId>
		<artifactId>skwidl</artifactId>
		<version>0.0.1-SNAPSHOT</version>
		<relativePath>/../pom.xml</relativePath>
	</parent>
	<packaging>jar</packaging>
	<artifactId>customers</artifactId>
	<version>0.0.1-SNAPSHOT</version>
	<name>customers</name>
	<description>bombas de papa</description>
	<dependencies>
		<dependency>
			<groupId>org.hibernate.validator</groupId>
			<artifactId>hibernate-validator</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-amqp</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-data-jpa</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-web</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.cloud</groupId>
			<artifactId>spring-cloud-starter-netflix-eureka-client</artifactId>
		</dependency>
		<dependency>
			<groupId>com.mysql</groupId>
			<artifactId>mysql-connector-j</artifactId>
			<version>8.3.0</version>
			<scope>runtime</scope>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-test</artifactId>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-testcontainers</artifactId>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.springframework.amqp</groupId>
			<artifactId>spring-rabbit-test</artifactId>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.testcontainers</groupId>
			<artifactId>junit-jupiter</artifactId>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.testcontainers</groupId>
			<artifactId>mysql</artifactId>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.testcontainers</groupId>
			<artifactId>rabbitmq</artifactId>
			<scope>test</scope>
		</dependency>
		<!-- https://mvnrepository.com/artifact/org.springframework.retry/spring-retry -->
		<dependency>
			<groupId>org.springframework.retry</groupId>
			<artifactId>spring-retry</artifactId>
		</dependency>
		<!-- https://mvnrepository.com/artifact/org.springframework.boot/spring-boot-starter-aop -->
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-aop</artifactId>
		</dependency>
        <dependency>
            <groupId>dev.jbazann.skwidl</groupId>
            <artifactId>commons</artifactId>
        </dependency>
    </dependencies>

	<build>
		<resources>
			<resource>
				<filtering>true</filtering>
				<targetPath>META-INF/</targetPath>
				<directory>${project.basedir}/src/main/resources/mysql/</directory>
				<includes>
					<include>persistence.xml</include>
				</includes>
			</resource>
			<resource>
				<filtering>true</filtering>
				<targetPath>META-INF/</targetPath>
				<directory>${project.basedir}/src/main/resources/META-INF/</directory>
				<includes>
					<include>**.xml</include>
				</includes>
			</resource>
			<resource>
				<directory>${project.basedir}/src/main/resources/</directory>
				<includes>
					<include>**.yml</include>
				</includes>
				<filtering>true</filtering>
			</resource>
		</resources>
		<plugins>
			<plugin>
				<groupId>org.springframework.boot</groupId>
				<artifactId>spring-boot-maven-plugin</artifactId>
			</plugin>
			<plugin>
				<groupId>org.hibernate.orm.tooling</groupId>
				<artifactId>hibernate-enhance-maven-plugin</artifactId>
				<version>${hibernate.version}</version>
				<executions>
					<execution>
						<id>enhance</id>
						<goals>
							<goal>enhance</goal>
						</goals>
						<configuration>
							<enableLazyInitialization>true</enableLazyInitialization>
							<enableDirtyTracking>true</enableDirtyTracking>
							<enableAssociationManagement>true</enableAssociationManagement>
						</configuration>
					</execution>
				</executions>
			</plugin>

			<plugin>
				<!-- https://github.com/archiecobbs/hibernate-jpa-schemagen -->
				<groupId>org.dellroad</groupId>
				<artifactId>hibernate-jpa-schemagen</artifactId>
				<version>6.4.0</version>
				<executions>
					<execution>
						<id>generate-ddl-customer</id>
						<phase>process-classes</phase>
						<configuration>
							<jpaUnit>customer</jpaUnit>
							<outputFile>${project.basedir}/src/main/resources/mysql/customer/ddl.sql</outputFile>
							<verifyFile>${project.basedir}/src/main/resources/mysql/customer/ddl.sql</verifyFile>
						</configuration>
						<goals>
							<goal>export-jpa-schema</goal>
						</goals>
					</execution>
					<execution>
						<id>generate-ddl-site</id>
						<phase>process-classes</phase>
						<configuration>
							<jpaUnit>site</jpaUnit>
							<outputFile>${project.basedir}/src/main/resources/mysql/site/ddl.sql</outputFile>
							<verifyFile>${project.basedir}/src/main/resources/mysql/site/ddl.sql</verifyFile>
						</configuration>
						<goals>
							<goal>export-jpa-schema</goal>
						</goals>
					</execution>
					<execution>
						<id>generate-ddl-user</id>
						<phase>process-classes</phase>
						<configuration>
							<jpaUnit>user</jpaUnit>
							<outputFile>${project.basedir}/src/main/resources/mysql/user/ddl.sql</outputFile>
							<verifyFile>${project.basedir}/src/main/resources/mysql/user/ddl.sql</verifyFile>
						</configuration>
						<goals>
							<goal>export-jpa-schema</goal>
						</goals>
					</execution>
					<execution>
						<id>generate-ddl-transaction</id>
						<phase>process-classes</phase>
						<configuration>
							<jpaUnit>transaction</jpaUnit>
							<outputFile>${project.basedir}/src/main/resources/mysql/transaction/ddl.sql</outputFile>
							<verifyFile>${project.basedir}/src/main/resources/mysql/transaction/ddl.sql</verifyFile>
						</configuration>
						<goals>
							<goal>export-jpa-schema</goal>
						</goals>
					</execution>
				</executions>
			</plugin>

			<plugin>
				<groupId>org.eclipse.jkube</groupId>
				<artifactId>kubernetes-maven-plugin</artifactId>
				<version>1.16.2</version>
				<executions>
					<execution>
						<id>k8s-images-db</id>
						<phase>install</phase>
						<goals>
							<goal>build</goal>
						</goals>
						<configuration>
							<images>
								<image>
									<name>%g/customersdb:%l</name>
									<build>
										<from>mysql:9.0.1-oracle</from>
										<assembly>
											<excludeFinalOutputArtifact>true</excludeFinalOutputArtifact>
											<targetDir>/docker-entrypoint-initdb.d</targetDir>
											<layers>
												<layer>
													<id>mysql</id>
													<baseDirectory>${project.build.directory}</baseDirectory>
													<files>
														<file>
															<source>${project.basedir}/src/main/resources/mysql/master.sql</source>
															<outputDirectory>${project.build.directory}/docker/skwidl/customersdb/latest/build/mysql/docker-entrypoint-initdb.d/</outputDirectory>
															<destName>0.sql</destName>
														</file>
														<file>
															<source>${project.basedir}/src/main/resources/mysql/customer/ddl.sql</source>
															<outputDirectory>${project.build.directory}/docker/skwidl/customersdb/latest/build/mysql/docker-entrypoint-initdb.d/ddl/</outputDirectory>
															<destName>customer.sql</destName>
														</file>
														<file>
															<source>${project.basedir}/src/main/resources/mysql/site/ddl.sql</source>
															<outputDirectory>${project.build.directory}/docker/skwidl/customersdb/latest/build/mysql/docker-entrypoint-initdb.d/ddl/</outputDirectory>
															<destName>site.sql</destName>
														</file>
														<file>
															<source>${project.basedir}/src/main/resources/mysql/user/ddl.sql</source>
															<outputDirectory>${project.build.directory}/docker/skwidl/customersdb/latest/build/mysql/docker-entrypoint-initdb.d/ddl/</outputDirectory>
															<destName>user.sql</destName>
														</file>
														<file>
															<source>${project.basedir}/src/main/resources/mysql/transaction/ddl.sql</source>
															<outputDirectory>${project.build.directory}/docker/skwidl/customersdb/latest/build/mysql/docker-entrypoint-initdb.d/ddl/</outputDirectory>
															<destName>transaction.sql</destName>
														</file>
													</files>
												</layer>
											</layers>
										</assembly>
									</build>
								</image>
							</images>
						</configuration>
					</execution>
				</executions>
			</plugin>

		</plugins>

</build>
</project>
